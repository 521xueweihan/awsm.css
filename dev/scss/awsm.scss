@import 'mixins';
@import 'variables';

//- Basic

html {
  font-family: font('serif');
  font-size: size('font-min');
  line-height: size('line-height-max');
  background: color('secondary');
  color: color('primary');
}

//- Layout & fonts

body {
  margin: 1em;

  header,
  main,
  footer,
  article {
    max-width: size('width-max');
    margin: 0 auto;
  }

  > header {
    margin-bottom: 3.5em;

    h1 {
      margin: 0;
    }

    p {
      margin: 0;
      font-size: .85em;
    }
  }

  > footer {
    margin-top: 4.5em;
    padding-bottom: 1.5em;
    text-align: center;
    font-size: .8rem;
    color: color('stealthy');
  }
}

nav {
  margin: 1em 0;

  ul {
    list-style: none;
    margin: 0;
    padding: 0;

    li {
      display: inline-block;
      margin-right: 1em;
    }
  }

  a {
    &:visited {
      color: color('link');
    }

    &:hover,
    &:focus {
      color: color('link-hover');
    }
  }
}

h1, h2, h3, h4, h5, h6 {
  margin: 1.25em 0 0;
  line-height: size('line-height-min');

  + p {
    margin-top: .5em;
  }
}

h1 {
  font-size: 2em;
}

h2 {
  font-size: 1.75em;
}

h3 {
  font-size: 1.25em;
}

//- Typography

a {
  text-decoration: none;
  color: color('link');
  transition: color 300ms ease-out, box-shadow 300ms ease-out;

  @include retina-border(color('link'));

  &:visited {
    color: mix(color('link'), color('secondary')); //- we can't use rgba or change background-image in :visited 'cause of security
  }

  &:hover,
  &:focus {
    box-shadow: inset 0px -1px color('link-hover');
    color: color('link-hover');
    transition: color 0s, box-shadow 0s;
  }
}

//- Media

img {
  display: block;
  max-width: 100%;
  margin: 0 auto;
}

audio, video {
  width: 100%;
  max-width: 100%;
}

//- Code
pre {
  > code {
    $scrollBorderColor: rgba(color('primary'), .15);

    display: flex;
    position: relative;
    overflow-x: auto;
    padding: 0 1px;
    background:
      linear-gradient($scrollBorderColor 0%, $scrollBorderColor 100%) 0 0,
      linear-gradient($scrollBorderColor 0%, $scrollBorderColor 100%) 100% 0;
    background-attachment: scroll, scroll;
    background-size: 1px 100%, 1px 100%;
    background-repeat: no-repeat;

    &::before,
    &::after {
      content: '';
      display: flex;
      flex-shrink: 0;
      position: relative;
      width: 1px;
      background: color('secondary');
    }

    &::before {
      left: -1px;
    }

    &::after {
      right: -1px;
      width: 2px; // fix render in chrome on android
      margin-left: auto;
    }
  }
}
